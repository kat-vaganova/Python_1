# 3. Создайте собственный класс-исключение,
# который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта,
# введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем,
# что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента
# и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


class NumbersException(Exception):
    def __init__(self, stroka):
        self.stroka = stroka

    def __str__(self):
        print("Mistake")

result = []
while True:
    text = input("Вводите числа: ")
    if text == "stop":
        print(*result)
        break
    elif text.isdigit():
          result.append(text)
    else:
        NumbersException(text)
        print("Mistake")

